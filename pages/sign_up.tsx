import { AddPhotoAlternate, Delete, Send, Visibility, VisibilityOff } from "@mui/icons-material";
import { Box, Button, FormControl, IconButton, Input, InputAdornment, InputLabel, Link, Paper, TextField, Typography } from "@mui/material";
import Head from "next/head";
import { useState } from "react";
import Layout from "../components/Layout/Layout";

export default function SignUpPage() {

  const [state, setState] = useState({
    top: false,
    left: false,
    bottom: false,
    right: false,
  });

  const toggleDrawer = (anchor: any, open: any) => (event: { type: string; key: string; }) => {
    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {
      return;
    }

    setState({ ...state, [anchor]: open });
  };
  const [values, setValues] = useState({
    amount: '',
    password: '',
    confirmPassword: '',
    weight: '',
    weightRange: '',
    showPassword: false,
    showConfirmPassword: false,
  });

  const handleChange = (prop: string) => (event: { target: { value: any; }; }) => {
    setValues({ ...values, [prop]: event.target.value });
  };

  const handleClickShowPassword = () => {
    setValues({
      ...values,
      showPassword: !values.showPassword,
    });
  };

  const handleMouseDownPassword = (event: { preventDefault: () => void; }) => {
    event.preventDefault();
  };

  return (
    // <div>
    //   <Head>
    //     <title>YPO IDE</title>
    //     <meta name="description" content="Generated by create next app" />
    //     <link rel="icon" href="/logo.svg" type="image/svg+xml" />
    //   </Head>

    //   <main>
    <Layout>
      <Paper
        elevation={10}
        sx={{
          padding: '1em 2em',
          margin: 'auto 0',

          width: "80%",
          // minWidth: ""

          display: 'flex',
          flexDirection: 'column',
          flexWrap: 'nowrap',
          justifyContent: 'flex-start',
          alignItems: 'center',

          // justifySelf: "center"
        }}
      >
        <Typography variant='h5' >Sign Up</Typography>
        <Box
          component='form'
          sx={{
            display: 'flex',
            flexDirection: 'column',
            flexWrap: 'nowrap',
            justifyContent: 'flex-start',
            alignItems: 'center',
          }}
        >

          {/* <form> */}
          <TextField
            id='user-name'
            label='Name'
            // helperText='Use only a-z, A-Z, 0-9'
            // placeholder=''
            // value={value}
            // defaultValue="Default Value"

            variant='standard'
            required
          // InputProps={{
          //   readOnly: true,
          // }}
          // disabled
          // error

          // onChange={handleChange}
          />

          <TextField
            id='user-about'
            label='About'
            // helperText='Use only a-z, A-Z, 0-9'
            // placeholder=''
            // value={value}
            // defaultValue="Default Value"

            variant='standard'
            // required
            // InputProps={{
            //   readOnly: true,
            // }}
            // disabled
            // error
            multiline
            rows={4}

          // onChange={handleChange}
          />

          <IconButton sx={{ width: 80, height: 80, alignSelf: 'center' }} >
            <AddPhotoAlternate sx={{ width: 64, height: 64 }} />
          </IconButton>

          <TextField
            id='user-email'
            label='Email'
            // helperText='Use only a-z, A-Z, 0-9'
            // placeholder=''
            // value={value}
            // defaultValue="Default Value"

            variant='standard'
            required
          // InputProps={{
          //   readOnly: true,
          // }}
          // disabled
          // error

          // onChange={handleChange}
          />

          <TextField
            id='user-phone'
            label='Phone'
            // helperText='Use only numbers spaces dashes and "+" '
            // placeholder=''
            // value={value}
            // defaultValue="Default Value"

            variant='standard'
          // required
          // InputProps={{
          //   readOnly: true,
          // }}
          // disabled
          // error

          // onChange={handleChange}
          />

          <FormControl sx={{ m: 1, width: '25ch' }} variant="standard" required>
            <InputLabel htmlFor="user-password">Password</InputLabel>
            <Input
              id='user-password'
              type={values.showPassword ? 'text' : 'password'}

              value={values.password}
              // defaultValue="Default Value"

              // variant='standard'
              // error
              // size='small'
              // margin='dense'
              // fullWidth
              // color=''

              // InputProps={{
              //   readOnly: true,
              // }}
              // disabled
              onChange={handleChange('password')}
              autoComplete="current-password"

              endAdornment={
                <InputAdornment position="end">
                  <IconButton
                    aria-label="toggle password visibility"
                    onClick={handleClickShowPassword}
                    onMouseDown={handleMouseDownPassword}
                    edge="end"
                  >
                    {values.showPassword ? <VisibilityOff /> : <Visibility />}
                  </IconButton>
                </InputAdornment>
              }
            />
            {/* <FormHelperText id="password-helper-text"></FormHelperText> */}
          </FormControl>

          <FormControl sx={{ m: 1, width: '25ch' }} variant="standard" required>
            <InputLabel htmlFor="user-password-confirmation">Confirm Password</InputLabel>
            <Input
              id='user-password-confirmation'
              type={values.showPassword ? 'text' : 'password'}

              value={values.password}
              // defaultValue="Default Value"

              // variant='standard'
              // error
              // size='small'
              // margin='dense'
              // fullWidth
              // color=''

              required
              // InputProps={{
              //   readOnly: true,
              // }}
              // disabled
              onChange={handleChange('password')}
              autoComplete="current-password"

              endAdornment={
                <InputAdornment position="end">
                  <IconButton
                    aria-label="toggle password visibility"
                    onClick={handleClickShowPassword}
                    onMouseDown={handleMouseDownPassword}
                    edge="end"
                  >
                    {values.showPassword ? <VisibilityOff /> : <Visibility />}
                  </IconButton>
                </InputAdornment>
              }
            />
            {/* <FormHelperText id="password-helper-text"></FormHelperText> */}
          </FormControl>
          <Button variant="text" endIcon={<Send />}>
            Sign Up
          </Button>
          <Button variant="text" endIcon={<Delete />}>
            Reset
          </Button>
        </Box>
        <Box
          sx={{
            display: 'flex',
            flexWrap: 'nowrap',
            flexDirection: 'column',
            '& .MuiTextField-root': { m: 1, width: '25ch' },
          }}
        >
          <Link href='#'>Sign In</Link>
          <Link href='#'>I Forgot My Password</Link>
        </Box>
      </Paper>
    </Layout >
    //   </main>
    // </div>
  )
}
